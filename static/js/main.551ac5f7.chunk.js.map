{"version":3,"sources":["context/counterReducer.js","context/CounterState.js","components/CounterUseContext.js","components/CounterUseState.js","components/CounterRedux.js","redux/counterActions.js","App.js","reportWebVitals.js","redux/counterReducer.js","store.js","index.js"],"names":["counterReducer","state","action","type","count","payload","initialState","CounterContext","createContext","CounterProvider","children","useReducer","dispatch","Provider","value","CounterCTX","name","useContext","className","onClick","CounterUseState","useState","setCount","CounterRedux","counterState","useSelector","counter","useDispatch","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"oPAaeA,EAXQ,SAACC,EAAOC,GAC3B,OAAQA,EAAOC,MACX,IAAK,YACD,OAAO,2BAAIF,GAAX,IAAkBG,MAAOH,EAAMG,MAAQF,EAAOG,UAClD,IAAK,YACD,OAAO,2BAAIJ,GAAX,IAAkBG,MAAOH,EAAMG,MAAQF,EAAOG,UAClD,QACI,OAAOJ,I,OCNbK,EAAe,CAAEF,MAAO,GACjBG,EAAiBC,wBAAcF,GAE/BG,EAAkB,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAC7B,EAA4BC,qBAAWX,EAAgBM,GAAvD,mBAAQL,EAAR,KAAeW,EAAf,KAEA,OACI,cAACL,EAAeM,SAAhB,CAAyBC,MAAO,CAAEb,QAAOW,YAAzC,SACKF,KCQEK,EAfI,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACjB,EAA0BC,qBAAWV,GAA9BN,EAAP,EAAOA,MAAOW,EAAd,EAAcA,SAEd,OACI,qCACI,6BAAKI,IACL,oBAAGE,UAAU,YAAb,UACI,wBAASC,QAAS,kBAAMP,EAAS,CAACT,KAAM,YAAaE,QAAS,KAA9D,eACA,sBAAMa,UAAU,UAAhB,SAA2BjB,EAAMG,QACjC,wBAASe,QAAS,kBAAMP,EAAS,CAACT,KAAM,YAAaE,QAAS,KAA9D,sBCaDe,EAxBS,WAEpB,MAA0BC,mBAAS,GAAnC,mBAAOjB,EAAP,KAAckB,EAAd,KAUA,OACI,qCACI,kDACA,oBAAGJ,UAAU,YAAb,UACI,wBAASC,QARG,WACpBG,EAASlB,EAAQ,IAOT,eACA,sBAAMc,UAAU,UAAhB,SAA2Bd,IAC3B,wBAAQe,QAdI,WACpBG,EAASlB,EAAQ,IAaT,sB,eCEDmB,EAhBM,SAAC,GAAY,IAAXP,EAAU,EAAVA,KACbQ,EAAeC,aAAY,SAAAxB,GAAK,OAAIA,EAAMyB,WAC1Cd,EAAWe,cAEjB,OACI,qCACI,6BAAKX,IACL,oBAAGE,UAAU,YAAb,UACI,wBAAQA,UAAU,MAAMC,QAAS,kBAAMP,GCRlB,SAAAA,GACnCA,EAAS,CACPT,KAAM,kBDMM,eACA,sBAAMe,UAAU,UAAhB,SAA2BM,EAAaE,UACxC,wBAAQR,UAAU,MAAMC,QAAS,kBAAMP,GChBlB,SAAAA,GACnCA,EAAS,CACPT,KAAM,kBDcM,sBEMDyB,MAff,WACE,OACE,cAAC,EAAD,UACE,qBAAKV,UAAU,MAAf,SACA,yBAAQA,UAAU,aAAlB,UACE,cAAC,EAAD,CAAcF,KAAK,kBACnB,cAAC,EAAD,CAAYA,KAAK,uBACjB,cAAC,EAAD,CAAiBA,KAAK,6BCFfa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,uBCPRxB,EAAe,CACnBoB,QAAS,GAiBI1B,EAfQ,WAAkC,IAAjCC,EAAgC,uDAAzBK,EAAcJ,EAAW,uCACtD,OAAQA,EAAOC,MACb,IAAK,YACH,MAAO,CACLuB,QAASzB,EAAMyB,QAAU,GAE7B,IAAK,YACH,MAAO,CACLA,QAASzB,EAAMyB,QAAU,GAE7B,QACE,OAAOzB,ICNPqC,EAAUC,0BAAgB,CAC9Bb,QAAS1B,IASIwC,EANDC,sBACZH,EAEAI,8BAAoBC,0BAAgBC,OCPtCC,IAASC,OACP,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFO,SAASC,eAAe,SAM1BnB,M","file":"static/js/main.551ac5f7.chunk.js","sourcesContent":["\n\nconst counterReducer = (state, action) => {\n    switch (action.type) {\n        case 'INCREMENT':\n            return {...state, count: state.count + action.payload };\n        case 'DECREMENT':\n            return {...state, count: state.count - action.payload };\n        default:\n            return state\n    }\n}\n\nexport default counterReducer;","import { createContext, useReducer } from 'react'\nimport counterReducer from './counterReducer'\n\nconst initialState = { count: 0 }\nexport const CounterContext = createContext(initialState)\n\nexport const CounterProvider = ({children}) => {\n    const [ state, dispatch ] = useReducer(counterReducer, initialState)\n    \n    return (\n        <CounterContext.Provider value={{ state, dispatch }}>\n            {children}\n        </CounterContext.Provider>\n    )\n\n}\n\n\n","import { CounterContext } from '../context/CounterState'\nimport React, { useContext } from 'react'\n\n\nconst CounterCTX = ({name}) => {\n    const {state, dispatch} = useContext(CounterContext)\n\n    return (\n        <>\n            <h1>{name}</h1>\n            <p className=\"container\">\n                <button  onClick={() => dispatch({type: 'DECREMENT', payload: 1})}>-</button>\n                <span className=\"counter\">{state.count}</span>\n                <button  onClick={() => dispatch({type: 'INCREMENT', payload: 1})}>+</button>\n            </p>   \n        </>\n    )\n}\n\nexport default CounterCTX\n","import React, { useState } from 'react'\n\nconst CounterUseState = () => {\n\n    const [count, setCount] = useState(0)\n\n    const handleIncrement = () => {\n        setCount(count + 1)\n    }\n\n    const handleDecrement = () => {\n        setCount(count - 1)\n    }\n\n    return (\n        <>\n            <h1>useState Counter</h1>\n            <p className=\"container\">\n                <button  onClick={handleDecrement}>-</button>\n                <span className=\"counter\">{count}</span>\n                <button onClick={handleIncrement}>+</button>\n            </p>   \n        </>\n    )\n}\n\nexport default CounterUseState\n","import './Counter.css'\nimport React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { handleIncrement, handleDecrement } from '../redux/counterActions'\n\n\nconst CounterRedux = ({name}) => {\n    const counterState = useSelector(state => state.counter)\n    const dispatch = useDispatch()\n\n    return (\n        <>\n            <h1>{name}</h1>\n            <p className=\"container\">\n                <button className=\"btn\" onClick={() => dispatch(handleDecrement())}>-</button>\n                <span className=\"counter\">{counterState.counter}</span>\n                <button className=\"btn\" onClick={() => dispatch(handleIncrement())}>+</button>\n            </p>   \n        </>\n    )\n}\n\nexport default CounterRedux\n","export const handleIncrement = () => dispatch => {\n  dispatch({\n    type: 'INCREMENT'\n  });\n};\n\nexport const handleDecrement = () => dispatch => {\n  dispatch({\n    type: 'DECREMENT'\n  });\n};","\nimport './App.css';\nimport CounterCTX from './components/CounterUseContext';\nimport { CounterProvider } from './context/CounterState';\nimport CounterUseState from './components/CounterUseState';\nimport CounterRedux from './components/CounterRedux';\n\nfunction App() {\n  return (\n    <CounterProvider>\n      <div className=\"App\">\n      <header className=\"App-header\">\n        <CounterRedux name=\"Redux Counter\" />\n        <CounterCTX name=\"useContext Counter\" />\n        <CounterUseState name=\"useState Counter\" />\n      </header>\n\n      </div>\n    </CounterProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\n  counter: 0\n};\nconst counterReducer = (state= initialState, action) => {\n  switch (action.type) {\n    case 'INCREMENT':\n      return {\n        counter: state.counter + 1\n      };\n    case 'DECREMENT':\n      return {\n        counter: state.counter - 1\n      };\n    default:\n      return state;\n  }\n};\n\nexport default counterReducer;","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport counterReducer from './redux/counterReducer'\n\n// const initialState = {\n//   counter: \"0\",\n// }\nconst reducer = combineReducers({\n  counter: counterReducer\n})\n\nconst store = createStore(\n  reducer,\n  // initialState,\n  composeWithDevTools(applyMiddleware(thunk))\n)\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}